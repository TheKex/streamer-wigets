version: '2'

volumes:
  postgres_data:
  static_volume:
  certs:
  vhost:
  html:
  acme:

networks:
  db_net:

services:
  web:
    build: .
    restart: unless-stopped
    depends_on:
      - db
    volumes:
    - .:/src/
    - static_volume:/src/static
    networks:
      - db_net
    ports:
    - 8000:8000
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=${ALLOWED_HOST}
      - LETSENCRYPT_HOST=${ALLOWED_HOST}
  db:
    image: postgres:15-alpine
    volumes:
    - postgres_data:/var/lib/postgresql/data
    - ./logs:/var/log
    networks:
      - db_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready - U admin_django -d widget_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
    - 5432:5432
    env_file:
      - .env
  nginx:
    build: ./nginx
    restart: unless-stopped
    volumes:
    - static_volume:/src/static
    - certs:/etc/nginx/certs
    - vhost:/etc/nginx/vhost.d
    - html:/usr/share/nginx/html
    - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - db_net
    ports:
    - "80:80"
    - "443:443"
    depends_on:
      - web
  acme_companion:
    image: nginxproxy/acme-companion
    container_name: app_acme_companion
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh





